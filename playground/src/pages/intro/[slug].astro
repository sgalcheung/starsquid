---
// uri: column/intro/100002201
// uri: column/intro/new-hotel-offerings

import { CatalogComponent } from "@/components/react/ShadcnComponents";
import Layout from "@/layouts/Layout.astro";
import { COLUMN } from "@/helpers/constants";
import { Markdown } from "astro-remote";
import { getIntroductionBySlug } from "@/data/models/Introduction";
import AccordionGroup from "../../components/AccordionGroup.astro";

const { slug } = Astro.params;
if (!slug || slug === undefined) return Astro.redirect("/404");

const intro = await getIntroductionBySlug(slug);
const { data } = intro.data;
if (!intro || !data) return Astro.redirect("/404");

const catalogs = Astro.locals.catalogs;

if (!catalogs) return Astro.redirect("/404");

Astro.cookies.set(COLUMN, slug, { path: "/" });
---

<Layout>
  <div class="container mx-auto my-24 xl:my-5">
    <header class="flex flex-col items-center sm:mt-24 text-center">
      <h1 class="mb-6 ss-h1">
        {data.title.iv}
      </h1>
    </header>

    <section class="w-full">
      <div class="flex flex-row mb-6">
        <Markdown content={data.description.iv ?? ""} />
      </div>

      <div class="flex flex-col lg:flex-row gap-6">
        <!-- Left Column -->
        <div class="w-full lg:w-1/2 p-4">
          <CatalogComponent data={catalogs} client:visible />
        </div>

        <!-- Right Column: Accordion -->
        <div class="w-full lg:w-1/2 p-4">
          <div class="hs-accordion-group">
            {
              catalogs.map((catalog, index) => {
                return (
                  <AccordionGroup
                    index={index}
                    catalog={{
                      label: catalog.label,
                      items: catalog.items.map((item) => ({
                        link: item.link,
                        label: item.label,
                      })),
                    }}
                  />
                );
              })
            }
          </div>
        </div>
      </div>
    </section>
  </div>
</Layout>
